/* AÅŸaÄŸÄ±da global olarak tanÄ±mlanmÄ±ÅŸ deÄŸiÅŸkenler var, bunlarÄ± sakÄ±n deÄŸiÅŸtirme. YÃ¶nergeleri adÄ±m adÄ±m takip ederek gÃ¶revleri tamamla. */

var pi = 3.14159;

var sayilar = [45,856,12.5,63,0.02,154,2,54,78,61.7,654,26,12.5,63,969,152,32,31,14,74,32,365.9,5.2,45,76,20,27.4,562,12.15,365.85,45.87,22,88,56.4,96.45,23,56,332,361,713,321,258.3,10,974.8,275,570,707,814,326,596,626,494,546,724.8,359,231.4,883.1,379.1,691,990,815.9,937.1,837.3,859,476,370.8,480,860,221.1,78.8,255,613,958,973.7,209,470.6,157,13,314,269.6,885,507.9,383,276,636,268.8,558.1,114.7,336,311.7,340,403.2,356.9,529.5,932.5,17,756.5,771.6,415,523.1,736,187.8,680,618.6,945,105,712,696.7,217,68,500.7,28,358.6,69,87.1,477,289,86,33,885,458,102.8,328.8,776.1,948,762,902,286,810.9,888,770,194,423,61.4,916,19,146.5,255,38.4,356,971,19,269,49.3,877.8,474,130,113.3,992,198.2,962,467.3,231,719.5,708.3,0.02,196.2,38,178.3,740,521.8,237,140,260.3,546,774.4,430,531.4,706.7,238.4,384,14,319.6,992.1,839,572,11.5,788,381,938,430,908.9,398.1,675.6,568,319.1,593,50,574,349.6,316.6,506.9,933,180,731,692,822,552,743,250.7,88.3,986,954,930.1,430.2,590.8,971.1,463.4,798,956.8,845,75,156,362,41,14.5,76,123,369.4,7.7,45,78,23,27.4,502,12.00,335.85,45.87,24,85,56.4,96.45,23,57,337.8,245,703.02,8.41,1.3,4.24,1.17,7.85,5.94,3.55,8.45,7.84,296,30.1,957.6,207,782,762,305.8,628,777,798,467.3,828,526,588,909,200.5,209,833,159.6,565,901,36,501,396.5,197.2,273,314,652,123.9,561,586,523.4,422,793.5,493.2,686,427,5.22,4.99,0.08,5.2,1.7,3.85,0.85,2.04,1.64,7.16,862,506.4,3.9,159,266,548,910.1,919,491,845,650,470.6,464.5,423.2,730.8,923,239.5,358.6,339.1,507,667.7,867.7];



/* Ã–RNEK GÃ–REV: *KareninAlani* fonksiyonunu, aÅŸaÄŸÄ±daki adÄ±mlarÄ± takip ederek gÃ¼ncelle:
	1. Karenin kenar uzunluÄŸunu, tek parametre olarak alacak 
	2. Karenin alanÄ±nÄ± hesaplayacak (ğŸ’¡ Ä°PUCU: karenin alanÄ± = karenin kenar uzunluÄŸunun karesi)
	3. Sonunda da yazdÄ±ÄŸÄ±n fonksiyon,, kenar uzunlu verilen karenin alanÄ±nÄ± dÃ¶nmeli.
*/

//Ã–rneÄŸin Ã§Ã¶zÃ¼mÃ¼:
function KareninAlani(kenaruzunlugu){
	return kenaruzunlugu*kenaruzunlugu;
}

/* (Oto test yok) YukarÄ±daki KareninAlani fonksiyonunu kenar uzunluÄŸu = 10 vererek aÅŸaÄŸÄ±da Ã§alÄ±ÅŸtÄ±rÄ±p, sonucu konsolda gÃ¶zlemle (console.log)  */



/* 	GÃ–REV 1:  
		- *CemberinCevresi* fonksiyonunu, aÅŸaÄŸÄ±daki adÄ±mlarÄ± takip ederek gÃ¼ncelle:
			1. CemberinCevresi fonksiyonu, tek parametre olarak, sadece Ã§emberin yarÄ±Ã§apÄ±nÄ± almalÄ±. 
			2. "pi" sayÄ±sÄ±, global deÄŸiÅŸken olarak verilmiÅŸ, yani pi sayÄ±sÄ±nu, fonksiyonun parametresi olarak almana gerek yok. 
			3. Ã‡emberin Ã§evresini hesaplayan bir fonksiyon yazmalÄ±sÄ±n. (ğŸ’¡ Ä°PUCU: Ã‡emberin Ã§evresi = 2 * pi * yarÄ±Ã§ap)
			4. Sonunda da yazdÄ±ÄŸÄ±n fonksiyon, yarÄ±Ã§apÄ± verilen Ã§emberin Ã§evresini dÃ¶nmeli.
		*/

function CemberinCevresi(/* kodlar buraya */){
	/* kodlar buraya */
}


/* (Oto test yok) YukarÄ±daki *CemberinCevresi* fonksiyonunu yarÄ±Ã§ap = 5 vererek aÅŸaÄŸÄ±da Ã§alÄ±ÅŸtÄ±rÄ±p, sonucu konsolda gÃ¶zlemle (console.log)  */




/* 	GÃ–REV 2:  
		- CemberinAlani fonksiyonunu kullanarak aÅŸaÄŸÄ±daki yÃ¶nergeleri uygula:
			1. ArgÃ¼man olarak Ã§emberin yarÄ±Ã§apÄ±nÄ± BÄ°RÄ°NCÄ° parametre olacak alacaktÄ±r. 
			2. Global deÄŸiÅŸkenlerden gelen pi sayÄ±sÄ±nÄ±, fonksiyonun Ä°KÄ°NCÄ° parametresi olacak alacaktÄ±r.
			3. YazacaÄŸÄ±n fonksiyon, Ã§emberin alanÄ± hesaplanacak (ğŸ’¡ Ä°PUCU: Ã‡emberin alanÄ± = pi * yarÄ±Ã§apÄ±n karesi, yarÄ±Ã§apÄ±n karesini bulmak iÃ§in Javascript iÃ§inde tanÄ±mlÄ± Math kÃ¼tÃ¼phanesini kullanabilirsin. Math.pow(yaricap,2))
			4. Sonunda da yazdÄ±ÄŸÄ±n fonksiyon, Ã§emberin alanÄ± dÃ¶ndÃ¼rÃ¼lecektir.
		*/
		
function CemberinAlani(/* kodlar buraya */){
	/* kodlar buraya */
}


/* (Oto test yok) YukarÄ±daki CemberinAlani fonksiyonunu yarÄ±Ã§ap = 15 vererek aÅŸaÄŸÄ±da Ã§alÄ±ÅŸtÄ±rÄ±p, sonucu konsolda gÃ¶zlemleyin (console.log)  */



/* 	GÃ–REV 3:
		- SayfanÄ±n en Ã¼stÃ¼nde global deÄŸiÅŸken olarak tanÄ±mlanmÄ±ÅŸ bir sayilar dizisi var. Bu dizi, iÃ§inde 0 ile 1000 arasÄ±nda rasgele oluÅŸturulmuÅŸ tam sayÄ±lar ve ondalÄ±klÄ± sayÄ±lardan oluÅŸuyor. Bu diziyi kullanarak, aÅŸaÄŸÄ±daki yÃ¶nergeleri takip et:
			3a. Ã–nce, enbuyuk ve enkucuk isminde 2 adet deÄŸiÅŸken tanÄ±mlayÄ±n. Sonra sayilar dizisindeki en kÃ¼Ã§Ã¼k sayÄ± ile en bÃ¼yÃ¼k sayÄ±yÄ± bu deÄŸiÅŸkenlere atayÄ±n. (for dÃ¶ngÃ¼sÃ¼ kullanabilirsin)
			3b. `ucetambolunenler` adÄ±nda bir dizi tanÄ±mla ve bu diziye sayilar dizisindeki 3'Ã¼n tam katÄ± olan sayÄ±larÄ± ata (.forEach metodunu kullanabilirsin)
			3c. `ucetambolunenler` dizisindeki sayÄ±larÄ±n toplamÄ±nÄ± .reduce metoduyla bulup, sonucu `ucebolunenlerintoplami` deÄŸiÅŸkenine yazdÄ±r (.reduce metodunu kullanabilirsin)
			3d. `besyuzdenkucuksayilar` adÄ±nda bir dizi oluÅŸturarak, sayilar dizisinin iÃ§indeki 500'den kÃ¼Ã§Ã¼k sayÄ±larÄ± bu diziye ata (.filter metodunu kullanabilirsin)
			3e. besyuzdenkucuksayilar dizisindeki sayÄ±larÄ± kÃ¼Ã§Ã¼kten bÃ¼yÃ¼ÄŸe sÄ±ralayÄ±p `siralisayilar` adÄ±ndaki bir diziye aktar (.sort metodunu kullanabilirsin)
			3f. `tekraredensayilar` adÄ±nda bir dizi oluÅŸtur. sayilar dizisi iÃ§erisindeki bazÄ± sayÄ±lar birden fazla kere yazÄ±lmÄ±ÅŸ. sayilar dizisi iÃ§erisinde birden fazla kez yazÄ±lmÄ±ÅŸ sayÄ±larÄ± tespit ederek kaÃ§ kere tekrar edildiÄŸini belirten bir string oluÅŸturulup `tekraredensayilar` dizisine aktarÄ±lmasÄ±nÄ± istiyoruz. Ã–rnek string: "{sayÄ±} sayÄ±sÄ± {tekrarSayisi} kere tekrar edilmiÅŸ"
			Ã–RNEK: sayilar dizisi iÃ§erisinde 45 sayÄ±sÄ± 3 kere yazÄ±lmÄ±ÅŸ. "45 sayÄ±sÄ± 3 tekrar etmiÅŸ" stringini `tekraredensayilar` dizisine aktaracaÄŸÄ±z.
			ğŸ’¡ Ä°PUCU: Tekrar edilen sayÄ±larÄ± ve kaÃ§ kere tekrar edildiÄŸini kaydetmek iÃ§in bir nesne tanÄ±mlamalÄ±sÄ±n, bu gÃ¶revi yapabilmek iÃ§in en az 2 kere dÃ¶ngÃ¼ yazmalÄ±sÄ±n. 
			Birinci dÃ¶ngÃ¼de hangi sayÄ±nÄ±n kaÃ§ kere tekrar edildiÄŸini tespit edip, 2. dÃ¶ngÃ¼de stringi oluÅŸturup verilen diziye aktarmalÄ±sÄ±n.
	*/
	
	
/*  (oto test yok) sayilar dizisi iÃ§inde kaÃ§ adet sayÄ± olduÄŸunu konsola yazdÄ±r */



	var ucetambolunenler, enkucuk, enbuyuk, ucebolunenlerintoplami, besyuzdenkucuksayilar, siralisayilar, tekraredensayilar;
	
	//3a Ã§Ã¶zÃ¼mÃ¼

	/* kodlar buraya */
	
	
	
	// 3b Ã§Ã¶zÃ¼mÃ¼:

	/* kodlar buraya */
		
		
		
	//3c Ã§Ã¶zÃ¼mÃ¼:
	
	/* kodlar buraya */

	
	
	//3d Ã§Ã¶zÃ¼mÃ¼
	
	/* kodlar buraya */



	//3e Ã§Ã¶zÃ¼mÃ¼

	/* kodlar buraya */
	
	
	//3f Ã§Ã¶zÃ¼mÃ¼
	
	/* kodlar buraya */




	
		

/*  Bu satÄ±rÄ±n aÅŸaÄŸÄ±sÄ±ndaki kodlarÄ± lÃ¼tfen deÄŸiÅŸtirmeyin  */
function sa(){
    console.log('Kodlar Ã§alÄ±ÅŸÄ±yor');
    return 'as';
}
sa();
module.exports = {
    sa,
	CemberinCevresi,
	CemberinAlani,
	ucetambolunenler,
	enbuyuk,
	enkucuk,
	ucebolunenlerintoplami,
	besyuzdenkucuksayilar,
	siralisayilar,
	tekraredensayilar
}

